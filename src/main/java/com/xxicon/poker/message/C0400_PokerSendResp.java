// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/poker.proto

package com.xxicon.poker.message;

/**
 * <pre>
 * 发牌
 * </pre>
 *
 * Protobuf type {@code messages.C0400_PokerSendResp}
 */
public  final class C0400_PokerSendResp extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:messages.C0400_PokerSendResp)
    C0400_PokerSendRespOrBuilder {
private static final long serialVersionUID = 0L;
  // Use C0400_PokerSendResp.newBuilder() to construct.
  private C0400_PokerSendResp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private C0400_PokerSendResp() {
    pokers_ = emptyIntList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new C0400_PokerSendResp();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private C0400_PokerSendResp(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              pokers_ = newIntList();
              mutable_bitField0_ |= 0x00000001;
            }
            pokers_.addInt(input.readInt32());
            break;
          }
          case 10: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
              pokers_ = newIntList();
              mutable_bitField0_ |= 0x00000001;
            }
            while (input.getBytesUntilLimit() > 0) {
              pokers_.addInt(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 16: {

            first_ = input.readInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        pokers_.makeImmutable(); // C
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.xxicon.poker.message.Poker.internal_static_messages_C0400_PokerSendResp_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.xxicon.poker.message.Poker.internal_static_messages_C0400_PokerSendResp_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.xxicon.poker.message.C0400_PokerSendResp.class, com.xxicon.poker.message.C0400_PokerSendResp.Builder.class);
  }

  public static final int POKERS_FIELD_NUMBER = 1;
  private com.google.protobuf.Internal.IntList pokers_;
  /**
   * <pre>
   * 牌 0-51
   * </pre>
   *
   * <code>repeated int32 pokers = 1;</code>
   * @return A list containing the pokers.
   */
  public java.util.List<java.lang.Integer>
      getPokersList() {
    return pokers_;
  }
  /**
   * <pre>
   * 牌 0-51
   * </pre>
   *
   * <code>repeated int32 pokers = 1;</code>
   * @return The count of pokers.
   */
  public int getPokersCount() {
    return pokers_.size();
  }
  /**
   * <pre>
   * 牌 0-51
   * </pre>
   *
   * <code>repeated int32 pokers = 1;</code>
   * @param index The index of the element to return.
   * @return The pokers at the given index.
   */
  public int getPokers(int index) {
    return pokers_.getInt(index);
  }
  private int pokersMemoizedSerializedSize = -1;

  public static final int FIRST_FIELD_NUMBER = 2;
  private int first_;
  /**
   * <pre>
   * 第一个出牌位置（房间位置）
   * </pre>
   *
   * <code>int32 first = 2;</code>
   * @return The first.
   */
  public int getFirst() {
    return first_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (getPokersList().size() > 0) {
      output.writeUInt32NoTag(10);
      output.writeUInt32NoTag(pokersMemoizedSerializedSize);
    }
    for (int i = 0; i < pokers_.size(); i++) {
      output.writeInt32NoTag(pokers_.getInt(i));
    }
    if (first_ != 0) {
      output.writeInt32(2, first_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < pokers_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(pokers_.getInt(i));
      }
      size += dataSize;
      if (!getPokersList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      pokersMemoizedSerializedSize = dataSize;
    }
    if (first_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, first_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.xxicon.poker.message.C0400_PokerSendResp)) {
      return super.equals(obj);
    }
    com.xxicon.poker.message.C0400_PokerSendResp other = (com.xxicon.poker.message.C0400_PokerSendResp) obj;

    if (!getPokersList()
        .equals(other.getPokersList())) return false;
    if (getFirst()
        != other.getFirst()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getPokersCount() > 0) {
      hash = (37 * hash) + POKERS_FIELD_NUMBER;
      hash = (53 * hash) + getPokersList().hashCode();
    }
    hash = (37 * hash) + FIRST_FIELD_NUMBER;
    hash = (53 * hash) + getFirst();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.xxicon.poker.message.C0400_PokerSendResp parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.xxicon.poker.message.C0400_PokerSendResp parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.xxicon.poker.message.C0400_PokerSendResp parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.xxicon.poker.message.C0400_PokerSendResp parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.xxicon.poker.message.C0400_PokerSendResp parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.xxicon.poker.message.C0400_PokerSendResp parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.xxicon.poker.message.C0400_PokerSendResp parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.xxicon.poker.message.C0400_PokerSendResp parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.xxicon.poker.message.C0400_PokerSendResp parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.xxicon.poker.message.C0400_PokerSendResp parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.xxicon.poker.message.C0400_PokerSendResp parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.xxicon.poker.message.C0400_PokerSendResp parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.xxicon.poker.message.C0400_PokerSendResp prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * 发牌
   * </pre>
   *
   * Protobuf type {@code messages.C0400_PokerSendResp}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:messages.C0400_PokerSendResp)
      com.xxicon.poker.message.C0400_PokerSendRespOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.xxicon.poker.message.Poker.internal_static_messages_C0400_PokerSendResp_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.xxicon.poker.message.Poker.internal_static_messages_C0400_PokerSendResp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.xxicon.poker.message.C0400_PokerSendResp.class, com.xxicon.poker.message.C0400_PokerSendResp.Builder.class);
    }

    // Construct using com.xxicon.poker.message.C0400_PokerSendResp.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      pokers_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000001);
      first_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.xxicon.poker.message.Poker.internal_static_messages_C0400_PokerSendResp_descriptor;
    }

    @java.lang.Override
    public com.xxicon.poker.message.C0400_PokerSendResp getDefaultInstanceForType() {
      return com.xxicon.poker.message.C0400_PokerSendResp.getDefaultInstance();
    }

    @java.lang.Override
    public com.xxicon.poker.message.C0400_PokerSendResp build() {
      com.xxicon.poker.message.C0400_PokerSendResp result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.xxicon.poker.message.C0400_PokerSendResp buildPartial() {
      com.xxicon.poker.message.C0400_PokerSendResp result = new com.xxicon.poker.message.C0400_PokerSendResp(this);
      int from_bitField0_ = bitField0_;
      if (((bitField0_ & 0x00000001) != 0)) {
        pokers_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.pokers_ = pokers_;
      result.first_ = first_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.xxicon.poker.message.C0400_PokerSendResp) {
        return mergeFrom((com.xxicon.poker.message.C0400_PokerSendResp)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.xxicon.poker.message.C0400_PokerSendResp other) {
      if (other == com.xxicon.poker.message.C0400_PokerSendResp.getDefaultInstance()) return this;
      if (!other.pokers_.isEmpty()) {
        if (pokers_.isEmpty()) {
          pokers_ = other.pokers_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensurePokersIsMutable();
          pokers_.addAll(other.pokers_);
        }
        onChanged();
      }
      if (other.getFirst() != 0) {
        setFirst(other.getFirst());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.xxicon.poker.message.C0400_PokerSendResp parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.xxicon.poker.message.C0400_PokerSendResp) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.Internal.IntList pokers_ = emptyIntList();
    private void ensurePokersIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        pokers_ = mutableCopy(pokers_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <pre>
     * 牌 0-51
     * </pre>
     *
     * <code>repeated int32 pokers = 1;</code>
     * @return A list containing the pokers.
     */
    public java.util.List<java.lang.Integer>
        getPokersList() {
      return ((bitField0_ & 0x00000001) != 0) ?
               java.util.Collections.unmodifiableList(pokers_) : pokers_;
    }
    /**
     * <pre>
     * 牌 0-51
     * </pre>
     *
     * <code>repeated int32 pokers = 1;</code>
     * @return The count of pokers.
     */
    public int getPokersCount() {
      return pokers_.size();
    }
    /**
     * <pre>
     * 牌 0-51
     * </pre>
     *
     * <code>repeated int32 pokers = 1;</code>
     * @param index The index of the element to return.
     * @return The pokers at the given index.
     */
    public int getPokers(int index) {
      return pokers_.getInt(index);
    }
    /**
     * <pre>
     * 牌 0-51
     * </pre>
     *
     * <code>repeated int32 pokers = 1;</code>
     * @param index The index to set the value at.
     * @param value The pokers to set.
     * @return This builder for chaining.
     */
    public Builder setPokers(
        int index, int value) {
      ensurePokersIsMutable();
      pokers_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 牌 0-51
     * </pre>
     *
     * <code>repeated int32 pokers = 1;</code>
     * @param value The pokers to add.
     * @return This builder for chaining.
     */
    public Builder addPokers(int value) {
      ensurePokersIsMutable();
      pokers_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 牌 0-51
     * </pre>
     *
     * <code>repeated int32 pokers = 1;</code>
     * @param values The pokers to add.
     * @return This builder for chaining.
     */
    public Builder addAllPokers(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensurePokersIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, pokers_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 牌 0-51
     * </pre>
     *
     * <code>repeated int32 pokers = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearPokers() {
      pokers_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }

    private int first_ ;
    /**
     * <pre>
     * 第一个出牌位置（房间位置）
     * </pre>
     *
     * <code>int32 first = 2;</code>
     * @return The first.
     */
    public int getFirst() {
      return first_;
    }
    /**
     * <pre>
     * 第一个出牌位置（房间位置）
     * </pre>
     *
     * <code>int32 first = 2;</code>
     * @param value The first to set.
     * @return This builder for chaining.
     */
    public Builder setFirst(int value) {
      
      first_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 第一个出牌位置（房间位置）
     * </pre>
     *
     * <code>int32 first = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearFirst() {
      
      first_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:messages.C0400_PokerSendResp)
  }

  // @@protoc_insertion_point(class_scope:messages.C0400_PokerSendResp)
  private static final com.xxicon.poker.message.C0400_PokerSendResp DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.xxicon.poker.message.C0400_PokerSendResp();
  }

  public static com.xxicon.poker.message.C0400_PokerSendResp getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<C0400_PokerSendResp>
      PARSER = new com.google.protobuf.AbstractParser<C0400_PokerSendResp>() {
    @java.lang.Override
    public C0400_PokerSendResp parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new C0400_PokerSendResp(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<C0400_PokerSendResp> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<C0400_PokerSendResp> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.xxicon.poker.message.C0400_PokerSendResp getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

